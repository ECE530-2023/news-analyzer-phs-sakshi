Overview -
The application is built using Python and can analyze documents in various formats, including PDF, Microsoft Word,
and plain text files. The application can identify entities, relationships, keywords and sentiments in the text,
and it can generate reports summarizing the information in the document.

Setup -
requirements - Python 3

Usage
To use the Smart Document Analyzer, you will need to provide it with a document to analyze.
The application supports the following file formats:
    - PDF
    - Microsoft Word (DOC and DOCX)
    - Plain text
    - Image (png/jpg/jpeg)

To analyze a document, run the main.py script and enter the path to the file when prompted.
The application will analyze the document and generate a report summarizing the information in the document.

Customers -
1. Application developers
2. Analysts

The file contains Flask code for mainly 3 modules of the Text Analyzer:
1) Secure File Uploader
2) Text NLP Analysis
3) News Feed Ingestor

Python Flask was used to design this application

The homepage leads to a page displaying some basic text indicating that the application is successfully running.

Secure File Uploader
====================
The Secure File Uploader component is implemented by using the /upload route.
The upload function looks for files of specific extension and if it is not one of these accepted extensions, it will throw an error and ask user to reupload the file.

The original file can also be redownloaded post uploading.


Text NLP Analysis
====================
To begin the Analysis process, we need to extract the text from the document. This is done by using the /analyze url.
For this we use various steps:
    analyze_file(file)
    find_keywords(file) - finds all the keywords of the file
    analyze_text(file) - analyzes the text of the file
    convert_file_to_text(file) - extracts texts from different file formats
    tag_document_by_keyword(file) - tags each paragraph of the file with a keyword
    get_document_summary(file_id) - generates a summary of the document

Feed Ingester
====================
The feed ingester module will help to look up certain important keywords via hyperlink using google to search for the keywords.
The feed ingester will also be responsible for rendering the paragraphs or texts that match keywords in the future when user searches for it.
It is primary responsible for ingesting a given file/news feed

User stories -
Authentication module -
- User should be able to login
- User should be able to create an account
- User should be able to delete an account
- User should be able to change password

File Upload module -
- User should be able to upload documents in different formats(jpg,pdf,csv,doc,png)
- User should be able to download his past documents

File Analysis module -
- User should be able to see document summary
- User should be able to find all paragraphs related to a specific keyword
- User should be able to find all paragraphs related to a sentiment(positive/negative/neutral)
- User should be able to find the definition for a given keyword

File Ingester module -
- User should be able to ingest files

I would prefer a entity based module for this project.